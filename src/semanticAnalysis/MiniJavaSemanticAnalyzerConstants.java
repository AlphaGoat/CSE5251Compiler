/* Generated By:JavaCC: Do not edit this line. MiniJavaSemanticAnalyzerConstants.java */
package semanticAnalysis;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MiniJavaSemanticAnalyzerConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int BOOLEAN = 10;
  /** RegularExpression Id. */
  int INTEGER = 11;
  /** RegularExpression Id. */
  int STRING = 12;
  /** RegularExpression Id. */
  int CLASS = 13;
  /** RegularExpression Id. */
  int PUBLIC = 14;
  /** RegularExpression Id. */
  int STAT = 15;
  /** RegularExpression Id. */
  int VOID = 16;
  /** RegularExpression Id. */
  int EXTENDS = 17;
  /** RegularExpression Id. */
  int RETURN = 18;
  /** RegularExpression Id. */
  int THIS = 19;
  /** RegularExpression Id. */
  int NEW = 20;
  /** RegularExpression Id. */
  int MAIN = 21;
  /** RegularExpression Id. */
  int IF = 22;
  /** RegularExpression Id. */
  int ELSE = 23;
  /** RegularExpression Id. */
  int WHILE = 24;
  /** RegularExpression Id. */
  int GOTO = 25;
  /** RegularExpression Id. */
  int TRUE = 26;
  /** RegularExpression Id. */
  int FALSE = 27;
  /** RegularExpression Id. */
  int PRINT = 28;
  /** RegularExpression Id. */
  int LENGTH = 29;
  /** RegularExpression Id. */
  int DIGIT = 30;
  /** RegularExpression Id. */
  int ID = 31;
  /** RegularExpression Id. */
  int NUM = 32;
  /** RegularExpression Id. */
  int LPAREN = 33;
  /** RegularExpression Id. */
  int RPAREN = 34;
  /** RegularExpression Id. */
  int LBRACK = 35;
  /** RegularExpression Id. */
  int RBRACK = 36;
  /** RegularExpression Id. */
  int LBRACE = 37;
  /** RegularExpression Id. */
  int RBRACE = 38;
  /** RegularExpression Id. */
  int SEMI = 39;
  /** RegularExpression Id. */
  int COMMA = 40;
  /** RegularExpression Id. */
  int PLUS = 41;
  /** RegularExpression Id. */
  int MINUS = 42;
  /** RegularExpression Id. */
  int STAR = 43;
  /** RegularExpression Id. */
  int DIV = 44;
  /** RegularExpression Id. */
  int LTHAN = 45;
  /** RegularExpression Id. */
  int GTHAN = 46;
  /** RegularExpression Id. */
  int AND = 47;
  /** RegularExpression Id. */
  int EQUAL = 48;
  /** RegularExpression Id. */
  int ASSIGN = 49;
  /** RegularExpression Id. */
  int BANG = 50;
  /** RegularExpression Id. */
  int PERIOD = 51;
  /** RegularExpression Id. */
  int NOT_RECOGNIZED = 52;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int WithinComment = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 3>",
    "<token of kind 4>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\f\"",
    "\"\\r\"",
    "\"boolean\"",
    "\"int\"",
    "\"String\"",
    "\"class\"",
    "\"public\"",
    "\"static\"",
    "\"void\"",
    "\"extends\"",
    "\"return\"",
    "\"this\"",
    "\"new\"",
    "\"main\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"goto\"",
    "\"true\"",
    "\"false\"",
    "\"System.out.println\"",
    "\"length\"",
    "<DIGIT>",
    "<ID>",
    "<NUM>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"<\"",
    "\">\"",
    "\"&&\"",
    "\"==\"",
    "\"=\"",
    "\"!\"",
    "\".\"",
    "<NOT_RECOGNIZED>",
  };

}
